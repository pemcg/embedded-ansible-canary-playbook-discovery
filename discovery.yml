---
# Original awx project scan facts playbook and Ansible modules can be found:
#   https://github.com/ansible/awx-facts-playbooks

- name: "Ansible Migration Factory - Discovery"
  hosts: "all"
  gather_facts: True
  vars_files:
    - "vars/discovery_vars.yml"
  tasks:
    - name: "Unix/Linux"
      block:
        - name: "Get list of discovery roles installed"
          block:
            - name: "Get present project playbook directory"
              command: "pwd"
              register: "pwd_result"
              changed_when: False

            - name: "Get list of Disovery Roles"
              find:
                recurse: False
                paths:
                  - "{{ pwd_result.stdout }}/roles"
                patterns: "^amf-discovery-.*$"
                file_type: "directory"
                use_regex: True
              register: "discovery_roles_found"

            - debug:
                var: "discovery_roles_found"
                verbosity: "1"

            - name: "Set list of discovery roles found"
              set_fact:
                discovery_roles: "{{ discovery_roles_found | json_query('files[*].path') }}"
          delegate_to: "localhost"
          become: False
          connection: "local"
          run_once: True

        - name: "Scan packages | Unix/Linux"
          scan_packages:
            os_family: "{{ ansible_os_family }}"

        - name: "Scan services | Unix/Linux"
          scan_services:

        # Plugable discovery role interface
        - name: "Scan Custom | Unix/Linux"
          include_role:
            name: "{{ role }}"
          with_items: "{{ discovery_roles }}"
          loop_control:
            loop_var: "role"
          when: 'discovery_roles | length > 0'

        # Plugable application signature interface
        # Run application signature check (categorizer)
        - name: "Ensure discovered_apps list is initialized"
          set_fact:
            discovered_apps: []

        - name: "Debug discovered_apps initialized value"
          debug:
            var: "hostvars[inventory_hostname]['discovered_apps']"
            verbosity: "1"

        - name: "Debug scanned packages"
          debug:
            var: "hostvars[inventory_hostname]['ansible_facts']['packages']"
            verbosity: "1"

        - name: "Debug scanned services"
          debug:
            var: "hostvars[inventory_hostname]['ansible_facts']['services']"
            verbosity: "1"

        - name: "Debug all facts"
          debug:
            var: "hostvars[inventory_hostname]['ansible_facts']"

        # TODO:
        # Based on what OS, take the baseline list for each fact type
        #   Use unique jinja filter to get unique entries compared to a
        #   default OS install
        #   This helps ID running applications

        - name: "Check application signatures | Unix/Linux"
          include_role:
            name: "amf-application-signature-{{ application }}"
          with_items: "{{ discovery_app_signatures }}"
          loop_control:
            loop_var: "application"
          when: 'discovery_app_signatures | length > 0'

        # Create Ansible Tower "Discovered Inventory"
        # Role pseudo-code:
            # Ensure "Discovered Hosts" inventory exists in Tower
            # Create host {{ inventory_hostname }}
            # Attach host facts collected from discovery roles
            # Ensure groups exist from "{{ hostvars[inventory_hostname]['discovered_apps'] }}" - set by app sigs if length > 0
            # Place host in group from "{{ hostvars[inventory_hostname]['discovered_apps'] }}" - set by app sigs if length > 0
      when: 'ansible_os_family != "Windows"'

---
- name: "Initialize signature scoring"
  set_fact:
    amf_as_ansible_tower_svc_count: "0"
    amf_as_ansible_tower_usr_count: "0"
    amf_as_ansible_tower_grp_count: "0"
    amf_as_ansible_tower_path_count: "0"
    amf_as_ansible_tower_proc_count: "0"
    amf_as_ansible_tower_pkg_count: "0"

- name: "Check if Ansible Tower services match running"
  set_fact:
    amf_as_ansible_tower_svc_count: "{{ amf_as_ansible_tower_svc_count | int + 1 }}"
  with_items: "{{ amf_as_ansible_tower_services }}"
  when:
    - 'ansible_facts["services"][service] is defined'
  loop_control:
    loop_var: "service"

- name: "Check if Ansible Tower user exists"
  set_fact:
    amf_as_ansible_tower_usr_count: "{{ amf_as_ansible_tower_usr_count | int + 1 }}"
  when:
    - 'amf_as_ansible_tower_user_group.user in ansible_facts | json_query("user_group.users[*].username")'

- name: "Check if Ansible Tower group exists"
  set_fact:
    amf_as_ansible_tower_grp_count: "{{ amf_as_ansible_tower_grp_count | int + 1 }}"
  when:
    - 'amf_as_ansible_tower_user_group.group in ansible_facts | json_query("user_group.groups[*].group_name")'

- name: "Check if Ansible Tower application path exists"
  block:
    - stat:
        path: "{{ amf_as_ansible_tower_path }}"
        follow: False
        get_attributes: False
        get_checksum: False
        get_md5: False
        get_mime: False
      register: "amf_as_ansible_tower_path_check"

    - name: "Check if Ansible Tower application path exists"
      set_fact:
        amf_as_ansible_tower_path_count: "{{ amf_as_ansible_tower_path_count | int + 1 }}"
      when: "amf_as_ansible_tower_path_check.stat.exists"

- name: "Check if Ansible Tower packages are installed"
  set_fact:
    amf_as_ansible_tower_pkg_count: "{{ amf_as_ansible_tower_pkg_count | int + 1 }}"
  with_items: "{{ amf_as_ansible_tower_packages }}"
  when: 'ansible_facts["packages"][package] is defined'
  loop_control:
    loop_var: "package"

- name: "Output values of signature scores"
  debug:
    var: "item"
    #verbosity: "1"
  with_items:
    - "{{ amf_as_ansible_tower_svc_count }}"
    - "{{ amf_as_ansible_tower_usr_count }}"
    - "{{ amf_as_ansible_tower_grp_count }}"
    - "{{ amf_as_ansible_tower_path_count }}"
    - "{{ amf_as_ansible_tower_pkg_count }}"
    - "{{ amf_as_ansible_tower_proc_count }}"

- name: "Identify application as Ansible Tower"
  set_fact:
    discovered_apps: "{{ discovered_apps | union([{'name': 'Ansible Tower', 'desc': 'Hosts identified as Ansible Tower Servers'}]) }}"
  when:
    - 'amf_as_ansible_tower_svc_count | int >= 3'
# TODO: See issue #1 in ansible-canary-role-discovery-user-group
#    - 'amf_as_ansible_tower_usr_count | int >= 1'
    - 'amf_as_ansible_tower_grp_count | int >= 1'
    - 'amf_as_ansible_tower_path_count | int == 1'
    - 'amf_as_ansible_tower_pkg_count | int >= 4'
#    - 'amf_as_ansible_tower_proc_count: 0'
